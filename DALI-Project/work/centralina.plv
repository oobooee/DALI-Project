 :-dynamic disponibili/1,pianificazione_tagli_on/1,comandi_accensione/1,stato_iniziale/1. pianificazione_tagli([area1,area2,area3,area4,area5,area6]). pianificazione_tagli_speciali([pianoS1,pianoS2,pianoS3]). rasaerba([rasaerba,rasaerba1,rasaerba2]). comandi_accensione(non_inviati). stato_iniziale(off). power_on:-stato_iniziale(off). evi(power_on):-retract(stato_iniziale(off)),assert(stato_iniziale(on)),write('Power on'),nl,a(spento). eve(on):-evp(acceso),write('ignora_on'),nl. eve(on):-evp(spento),write('spento accendi'),a(acceso),a(drop_past(spento)),nl,pianificazione_tagli(Piani),assert(pianificazione_tagli_on(Piani)). eve(off):-evp(spento),write('ignora_off'),nl. eve(off):-evp(acceso),write(' acceso.. spegni'),nl,a(spento),a(drop_past(acceso)),inizializza_lista_disponibili,retract(comandi_accensione(inviati)),asserta(comandi_accensione(non_inviati)),retract(stato_iniziale(on)),assert(stato_iniziale(off)),retractall(pianificazione_tagli_on(_)). eve(busy(Rasaerba)):-write('busy'),write(Rasaerba),nl. eve(ready(Rasaerba)):-evp(assegna_piani_rasaerba_disponibili),aggiorna_lista_disponibili(Rasaerba),a(assegna_piani_rasaerba_disponibili). eve(ready(Rasaerba)):-write('Ricevuto ready da '),write(Rasaerba),nl,aggiorna_lista_disponibili(Rasaerba). eve(fault(Rasaerba,Piano)):-write('Fault ricevuto da: '),write(Rasaerba),nl,write('Piano non completato: '),write(Piano),nl,a(message(sensore_meteo_video,send_message(guasto(Rasaerba,Piano),Me))),aggiungi_piano_non_completato(Piano). eve(timer_taglio_giornaliero):-write('Timer taglio giornaliero innescato'),nl,a(assegna_piani_rasaerba_disponibili). evi(assegna_piani_rasaerba_disponibili):-disponibili(ListaRasaerba),pianificazione_tagli_on(Piani),(Piani\=[]->assegna_piani_rasaerba(ListaRasaerba,Piani),nl;write('Non ci sono piu piani da assegnare.'),nl,retractall(assegna_piani_rasaerba_disponibili),retractall(pianificazione_tagli),standby,nl). assegna_piani_rasaerba([],_):-write('Assegnati piani residui a rasaerba disponibili'),nl. standby:-write('STANDBY'),a(standby). assegna_piani_rasaerba([Rasaerba|AltriRasaerba],[Piano|AltriPiani]):-write('Assegnato piano di taglio: '),write(Piano),write(' a '),write(Rasaerba),nl,a(message(Rasaerba,send_message(comando_taglia_erba(Piano),Me))),a(message(sensore_meteo_video,send_message(operativo(Rasaerba,Piano),Me))),retract(disponibili([Rasaerba|_])),assert(disponibili(AltriRasaerba)),retract(pianificazione_tagli_on([Piano|_])),assert(pianificazione_tagli_on(AltriPiani)),stampa_lista_tagli_residui,assegna_piani_rasaerba(AltriRasaerba,AltriPiani). aggiungi_piano_non_completato(Piano):-pianificazione_tagli_on(PianiAttuali),append(PianiAttuali,[Piano],NuoviPiani),retract(pianificazione_tagli_on(PianiAttuali)),assert(pianificazione_tagli_on(NuoviPiani)),write('Piano '),write(Piano),write(' aggiunto alla lista dei piani non completati'),nl,stampa_lista_tagli_residui. stampa_lista_tagli_residui:-nl,write('-----------------------------'),nl,pianificazione_tagli_on(PianiResidui),write('Lista piani di taglio residui: '),write(PianiResidui),nl,write('-----------------------------'),nl. controlla_se_STARTED:-evp(acceso),comandi_accensione(non_inviati),nl,write('acceso'),sleep(2). evi(controlla_se_STARTED):-rasaerba(ListaRasaerba),tesg(invia_comando_STAR(ListaRasaerba)). tesg(invia_comando_STAR([])):-nl,write('Tutti i comandi di accensione sono stati inviati.'),nl,retractall(comandi_accensione(non_inviati)),asserta(comandi_accensione(inviati)). tesg(invia_comando_STAR([Rasaerba|Altri])):-inizializza_lista_disponibili,nl,write('Invio comando di accensione a '),write(Rasaerba),nl,a(message(Rasaerba,send_message(start,Me))),tesg(invia_comando_STAR(Altri)). inizializza_lista_disponibili:-nl,write('inizializza lista disponibili'),nl,retractall(disponibili(_)),assert(disponibili([])). aggiorna_lista_disponibili(Rasaerba):-disponibili(Lista),(member(Rasaerba,Lista)->nl,write('Rasaerba gia presente nella lista: '),write(Rasaerba),nl,write('Lista rasaerba disponibili aggiornata: '),write(disponibili(Lista)),nl;append([Rasaerba],Lista,NuovaLista),retract(disponibili(Lista)),assert(disponibili(NuovaLista)),nl,write('Lista rasaerba disponibili aggiornata: '),write(NuovaLista),nl). eve(proponi_se_disponibilii_taglio_fast):-a(proponi_taglio_fast),write('proponi'),nl. evi(proponi_taglio_fast):-disponibili(ListaRasaerba),nl,write('Richiesta taglio fast.. verifica disponibili'),nl,invia_proposta_taglio_fast(ListaRasaerba),nl. invia_proposta_taglio_fast([]):-write('Tutte le proposte di taglio rapido sono state inviate.'),nl. invia_proposta_taglio_fast([Rasaerba|Altri]):-write('Invio proposta di taglio rapido a '),write(Rasaerba),nl,a(message(Rasaerba,propose(proposta_taglio_fast,[disponibile],Me))),invia_proposta_taglio_fast(Altri). accept_proposal(A,B,C):-write('proposta'). eve(comando_taglia_erba_fast):-evp(disponibile(Rasaerba)),evp(acceso). eve(comando_taglia_erba_fast):-write('comando_taglia_erba'),a(message(Rasaerba,send_message(comando_taglia_erba_fast,Me))). :-dynamic receive/1. :-dynamic send/2. :-dynamic isa/3. receive(send_message(X,Ag)):-told(Ag,send_message(X)),call_send_message(X,Ag). receive(propose(A,C,Ag)):-told(Ag,propose(A,C)),call_propose(A,C,Ag). receive(cfp(A,C,Ag)):-told(Ag,cfp(A,C)),call_cfp(A,C,Ag). receive(accept_proposal(A,Mp,Ag)):-told(Ag,accept_proposal(A,Mp),T),call_accept_proposal(A,Mp,Ag,T). receive(reject_proposal(A,Mp,Ag)):-told(Ag,reject_proposal(A,Mp),T),call_reject_proposal(A,Mp,Ag,T). receive(failure(A,M,Ag)):-told(Ag,failure(A,M),T),call_failure(A,M,Ag,T). receive(cancel(A,Ag)):-told(Ag,cancel(A)),call_cancel(A,Ag). receive(execute_proc(X,Ag)):-told(Ag,execute_proc(X)),call_execute_proc(X,Ag). receive(query_ref(X,N,Ag)):-told(Ag,query_ref(X,N)),call_query_ref(X,N,Ag). receive(inform(X,M,Ag)):-told(Ag,inform(X,M),T),call_inform(X,Ag,M,T). receive(inform(X,Ag)):-told(Ag,inform(X),T),call_inform(X,Ag,T). receive(refuse(X,Ag)):-told(Ag,refuse(X),T),call_refuse(X,Ag,T). receive(agree(X,Ag)):-told(Ag,agree(X)),call_agree(X,Ag). receive(confirm(X,Ag)):-told(Ag,confirm(X),T),call_confirm(X,Ag,T). receive(disconfirm(X,Ag)):-told(Ag,disconfirm(X)),call_disconfirm(X,Ag). receive(reply(X,Ag)):-told(Ag,reply(X)). send(To,query_ref(X,N,Ag)):-tell(To,Ag,query_ref(X,N)),send_m(To,query_ref(X,N,Ag)). send(To,send_message(X,Ag)):-tell(To,Ag,send_message(X)),send_m(To,send_message(X,Ag)). send(To,reject_proposal(X,L,Ag)):-tell(To,Ag,reject_proposal(X,L)),send_m(To,reject_proposal(X,L,Ag)). send(To,accept_proposal(X,L,Ag)):-tell(To,Ag,accept_proposal(X,L)),send_m(To,accept_proposal(X,L,Ag)). send(To,confirm(X,Ag)):-tell(To,Ag,confirm(X)),send_m(To,confirm(X,Ag)). send(To,propose(X,C,Ag)):-tell(To,Ag,propose(X,C)),send_m(To,propose(X,C,Ag)). send(To,disconfirm(X,Ag)):-tell(To,Ag,disconfirm(X)),send_m(To,disconfirm(X,Ag)). send(To,inform(X,M,Ag)):-tell(To,Ag,inform(X,M)),send_m(To,inform(X,M,Ag)). send(To,inform(X,Ag)):-tell(To,Ag,inform(X)),send_m(To,inform(X,Ag)). send(To,refuse(X,Ag)):-tell(To,Ag,refuse(X)),send_m(To,refuse(X,Ag)). send(To,failure(X,M,Ag)):-tell(To,Ag,failure(X,M)),send_m(To,failure(X,M,Ag)). send(To,execute_proc(X,Ag)):-tell(To,Ag,execute_proc(X)),send_m(To,execute_proc(X,Ag)). send(To,agree(X,Ag)):-tell(To,Ag,agree(X)),send_m(To,agree(X,Ag)). call_send_message(X,Ag):-send_message(X,Ag). call_execute_proc(X,Ag):-execute_proc(X,Ag). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),meta_ref(X,N,L,Ag),a(message(Ag,inform(query_ref(X,N),values(L),A))). call_query_ref(X,_,Ag):-clause(agent(A),_),var(X),a(message(Ag,refuse(query_ref(variable),motivation(refused_variables),A))). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),not(meta_ref(X,N,_,_)),a(message(Ag,inform(query_ref(X,N),motivation(no_values),A))). call_agree(X,Ag):-clause(agent(A),_),ground(X),meta_agree(X,Ag),a(message(Ag,inform(agree(X),values(yes),A))). call_confirm(X,Ag,T):-ground(X),statistics(walltime,[Tp,_]),asse_cosa(past_event(X,T)),retractall(past(X,Tp,Ag)),assert(past(X,Tp,Ag)). call_disconfirm(X,Ag):-ground(X),retractall(past(X,_,Ag)),retractall(past_event(X,_)). call_agree(X,Ag):-clause(agent(A),_),ground(X),not(meta_agree(X,_)),a(message(Ag,inform(agree(X),values(no),A))). call_agree(X,Ag):-clause(agent(A),_),not(ground(X)),a(message(Ag,refuse(agree(variable),motivation(refused_variables),A))). call_inform(X,Ag,M,T):-asse_cosa(past_event(inform(X,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,M,Ag),_,Ag)),assert(past(inform(X,M,Ag),Tp,Ag)). call_inform(X,Ag,T):-asse_cosa(past_event(inform(X,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,Ag),_,Ag)),assert(past(inform(X,Ag),Tp,Ag)). call_refuse(X,Ag,T):-clause(agent(A),_),asse_cosa(past_event(X,T)),statistics(walltime,[Tp,_]),retractall(past(X,_,Ag)),assert(past(X,Tp,Ag)),a(message(Ag,reply(received(X),A))). call_cfp(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_461819,Ontology,_461823),_461813),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_cfp(A,C,Ag,_461857)),a(message(Ag,propose(A,[_461857],AgI))),retractall(ext_agent(Ag,_461895,Ontology,_461899)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_461693,Ontology,_461697),_461687),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_propose(A,C,Ag)),a(message(Ag,accept_proposal(A,[],AgI))),retractall(ext_agent(Ag,_461763,Ontology,_461767)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_461581,Ontology,_461585),_461575),not(call_meta_execute_propose(A,C,Ag)),a(message(Ag,reject_proposal(A,[],AgI))),retractall(ext_agent(Ag,_461637,Ontology,_461641)). call_accept_proposal(A,Mp,Ag,T):-asse_cosa(past_event(accepted_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(accepted_proposal(A,Mp,Ag),_,Ag)),assert(past(accepted_proposal(A,Mp,Ag),Tp,Ag)). call_reject_proposal(A,Mp,Ag,T):-asse_cosa(past_event(rejected_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(rejected_proposal(A,Mp,Ag),_,Ag)),assert(past(rejected_proposal(A,Mp,Ag),Tp,Ag)). call_failure(A,M,Ag,T):-asse_cosa(past_event(failed_action(A,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(failed_action(A,M,Ag),_,Ag)),assert(past(failed_action(A,M,Ag),Tp,Ag)). call_cancel(A,Ag):-if(clause(high_action(A,Te,Ag),_461145),retractall(high_action(A,Te,Ag)),true),if(clause(normal_action(A,Te,Ag),_461179),retractall(normal_action(A,Te,Ag)),true). external_refused_action_propose(A,Ag):-clause(not_executable_action_propose(A,Ag),_). evi(external_refused_action_propose(A,Ag)):-clause(agent(Ai),_),a(message(Ag,failure(A,motivation(false_conditions),Ai))),retractall(not_executable_action_propose(A,Ag)). refused_message(AgM,Con):-clause(eliminated_message(AgM,_,_,Con,_),_). refused_message(To,M):-clause(eliminated_message(M,To,motivation(conditions_not_verified)),_460961). evi(refused_message(AgM,Con)):-clause(agent(Ai),_),a(message(AgM,inform(Con,motivation(refused_message),Ai))),retractall(eliminated_message(AgM,_,_,Con,_)),retractall(eliminated_message(Con,AgM,motivation(conditions_not_verified))). send_jasper_return_message(X,S,T,S0):-clause(agent(Ag),_460809),a(message(S,send_message(sent_rmi(X,T,S0),Ag))). gest_learn(H):-clause(past(learn(H),T,U),_460757),learn_if(H,T,U). evi(gest_learn(H)):-retractall(past(learn(H),_460633,_460635)),clause(agente(_460655,_460657,_460659,S),_460651),name(S,N),append(L,[46,112,108],N),name(F,L),manage_lg(H,F),a(learned(H)). cllearn:-clause(agente(_460427,_460429,_460431,S),_460423),name(S,N),append(L,[46,112,108],N),append(L,[46,116,120,116],To),name(FI,To),open(FI,read,_460527,[]),repeat,read(_460527,T),arg(1,T,H),write(H),nl,T==end_of_file,!,close(_460527). send_msg_learn(T,A,Ag):-a(message(Ag,confirm(learn(T),A))). told(From,send_message(M)):-true. told(Ag,execute_proc(_)):-true. told(Ag,query_ref(_,_)):-true. told(Ag,agree(_)):-true. told(Ag,confirm(_),200):-true. told(Ag,disconfirm(_)):-true. told(Ag,request(_,_)):-true. told(Ag,propose(_,_)):-true. told(Ag,accept_proposal(_,_),20):-true. told(Ag,reject_proposal(_,_),20):-true. told(_,failure(_,_),200):-true. told(_,cancel(_)):-true. told(Ag,inform(_,_),70):-true. told(Ag,inform(_),70):-true. told(Ag,reply(_)):-true. told(_,refuse(_,Xp)):-functor(Xp,Fp,_),Fp=agree. tell(To,From,send_message(M)):-true. tell(To,_,confirm(_)):-true. tell(To,_,disconfirm(_)):-true. tell(To,_,propose(_,_)):-true. tell(To,_,request(_,_)):-true. tell(To,_,execute_proc(_)):-true. tell(To,_,agree(_)):-true. tell(To,_,reject_proposal(_,_)):-true. tell(To,_,accept_proposal(_,_)):-true. tell(To,_,failure(_,_)):-true. tell(To,_,query_ref(_,_)):-true. tell(To,_,eve(_)):-true. tell(_,_,refuse(X,_)):-functor(X,F,_),(F=send_message;F=query_ref). tell(To,_,inform(_,M)):-true;M=motivation(refused_message). tell(To,_,inform(_)):-true,To\=user. tell(To,_,propose_desire(_,_)):-true. meta(P,V,AgM):-functor(P,F,N),N=0,clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,V,Pre,[Rep,Host]);same_as(F,V,Pre,[Rep,Host]);eq_class(F,V,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,V,PreM,[RepM,HostM]);same_as(F,V,PreM,[RepM,HostM]);eq_class(F,V,PreM,[RepM,HostM])),true,false),false)). meta(P,V,AgM):-functor(P,F,N),(N=1;N=2),clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,_):-functor(P,F,N),N=2,symmetric(F),P=..L,delete(L,F,R),reverse(R,R1),append([F],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),functor(P,F,N),N=2,(symmetric(F,AgM);symmetric(F)),P=..L,delete(L,F,R),reverse(R,R1),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,Y,Pre,[Rep,Host]);same_as(F,Y,Pre,[Rep,Host]);eq_class(F,Y,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,Y,PreM,[RepM,HostM]);same_as(F,Y,PreM,[RepM,HostM]);eq_class(F,Y,PreM,[RepM,HostM])),true,false),false)),append([Y],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N>2,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N=2,P=..L,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),substitute(F,L,H,Lf),V=..Lf.
a(acceso):-cd(acceso),assert(do_action(acceso,program)).
cd(acceso):-true.
a(assegna_piani_rasaerba_disponibili):-cd(assegna_piani_rasaerba_disponibili),assert(do_action(assegna_piani_rasaerba_disponibili,program)).
cd(assegna_piani_rasaerba_disponibili):-true.
a(proponi_taglio_fast):-cd(proponi_taglio_fast),assert(do_action(proponi_taglio_fast,program)).
cd(proponi_taglio_fast):-true.
a(spento):-cd(spento),assert(do_action(spento,program)).
cd(spento):-true.
a(standby):-cd(standby),assert(do_action(standby,program)).
cd(standby):-true.
a(drop_past(acceso)):-cd(drop_past(acceso)),assert(do_action(drop_past(acceso),program)).
cd(drop_past(acceso)):-true.
a(drop_past(spento)):-cd(drop_past(spento)),assert(do_action(drop_past(spento),program)).
cd(drop_past(spento)):-true.
a(learned(_1154607)):-cd(learned(_1154607)),assert(do_action(learned(_1154607),program)).
cd(learned(_1154607)):-true.
a(message(_1154615,confirm(learn(_1154627),_1154623))):-cd(message(_1154615,confirm(learn(_1154627),_1154623))),assert(do_action(message(_1154615,confirm(learn(_1154627),_1154623)),program)).
cd(message(_1154615,confirm(learn(_1154627),_1154623))):-true.
a(message(sensore_meteo_video,send_message(guasto(_1154647,_1154649),_1154643))):-cd(message(sensore_meteo_video,send_message(guasto(_1154647,_1154649),_1154643))),assert(do_action(message(sensore_meteo_video,send_message(guasto(_1154647,_1154649),_1154643)),program)).
cd(message(sensore_meteo_video,send_message(guasto(_1154647,_1154649),_1154643))):-true.
a(message(sensore_meteo_video,send_message(operativo(_1154647,_1154649),_1154643))):-cd(message(sensore_meteo_video,send_message(operativo(_1154647,_1154649),_1154643))),assert(do_action(message(sensore_meteo_video,send_message(operativo(_1154647,_1154649),_1154643)),program)).
cd(message(sensore_meteo_video,send_message(operativo(_1154647,_1154649),_1154643))):-true.
a(message(_1154679,reply(received(_1154691),_1154687))):-cd(message(_1154679,reply(received(_1154691),_1154687))),assert(do_action(message(_1154679,reply(received(_1154691),_1154687)),program)).
cd(message(_1154679,reply(received(_1154691),_1154687))):-true.
a(message(_1154679,accept_proposal(_1154687,[],_1154709))):-cd(message(_1154679,accept_proposal(_1154687,[],_1154709))),assert(do_action(message(_1154679,accept_proposal(_1154687,[],_1154709)),program)).
cd(message(_1154679,accept_proposal(_1154687,[],_1154709))):-true.
a(message(_1154679,failure(_1154687,motivation(false_conditions),_1154727))):-cd(message(_1154679,failure(_1154687,motivation(false_conditions),_1154727))),assert(do_action(message(_1154679,failure(_1154687,motivation(false_conditions),_1154727)),program)).
cd(message(_1154679,failure(_1154687,motivation(false_conditions),_1154727))):-true.
a(message(_1154679,inform(agree(_1154691),values(no),_1154687))):-cd(message(_1154679,inform(agree(_1154691),values(no),_1154687))),assert(do_action(message(_1154679,inform(agree(_1154691),values(no),_1154687)),program)).
cd(message(_1154679,inform(agree(_1154691),values(no),_1154687))):-true.
a(message(_1154679,inform(agree(_1154691),values(yes),_1154687))):-cd(message(_1154679,inform(agree(_1154691),values(yes),_1154687))),assert(do_action(message(_1154679,inform(agree(_1154691),values(yes),_1154687)),program)).
cd(message(_1154679,inform(agree(_1154691),values(yes),_1154687))):-true.
a(message(_1154679,inform(query_ref(_1154691,_1154807),motivation(no_values),_1154687))):-cd(message(_1154679,inform(query_ref(_1154691,_1154807),motivation(no_values),_1154687))),assert(do_action(message(_1154679,inform(query_ref(_1154691,_1154807),motivation(no_values),_1154687)),program)).
cd(message(_1154679,inform(query_ref(_1154691,_1154807),motivation(no_values),_1154687))):-true.
a(message(_1154679,inform(query_ref(_1154691,_1154807),values(_1154839),_1154687))):-cd(message(_1154679,inform(query_ref(_1154691,_1154807),values(_1154839),_1154687))),assert(do_action(message(_1154679,inform(query_ref(_1154691,_1154807),values(_1154839),_1154687)),program)).
cd(message(_1154679,inform(query_ref(_1154691,_1154807),values(_1154839),_1154687))):-true.
a(message(_1154679,propose(_1154687,[_1154859],_1154709))):-cd(message(_1154679,propose(_1154687,[_1154859],_1154709))),assert(do_action(message(_1154679,propose(_1154687,[_1154859],_1154709)),program)).
cd(message(_1154679,propose(_1154687,[_1154859],_1154709))):-true.
a(message(_1154679,refuse(agree(variable),motivation(refused_variables),_1154687))):-cd(message(_1154679,refuse(agree(variable),motivation(refused_variables),_1154687))),assert(do_action(message(_1154679,refuse(agree(variable),motivation(refused_variables),_1154687)),program)).
cd(message(_1154679,refuse(agree(variable),motivation(refused_variables),_1154687))):-true.
a(message(_1154679,refuse(query_ref(variable),motivation(refused_variables),_1154687))):-cd(message(_1154679,refuse(query_ref(variable),motivation(refused_variables),_1154687))),assert(do_action(message(_1154679,refuse(query_ref(variable),motivation(refused_variables),_1154687)),program)).
cd(message(_1154679,refuse(query_ref(variable),motivation(refused_variables),_1154687))):-true.
a(message(_1154679,reject_proposal(_1154687,[],_1154709))):-cd(message(_1154679,reject_proposal(_1154687,[],_1154709))),assert(do_action(message(_1154679,reject_proposal(_1154687,[],_1154709)),program)).
cd(message(_1154679,reject_proposal(_1154687,[],_1154709))):-true.
a(message(_1154939,inform(_1154945,motivation(refused_message),_1154727))):-cd(message(_1154939,inform(_1154945,motivation(refused_message),_1154727))),assert(do_action(message(_1154939,inform(_1154945,motivation(refused_message),_1154727)),program)).
cd(message(_1154939,inform(_1154945,motivation(refused_message),_1154727))):-true.
a(message(_1154647,send_message(comando_taglia_erba_fast,_1154643))):-cd(message(_1154647,send_message(comando_taglia_erba_fast,_1154643))),assert(do_action(message(_1154647,send_message(comando_taglia_erba_fast,_1154643)),program)).
cd(message(_1154647,send_message(comando_taglia_erba_fast,_1154643))):-true.
a(message(_1154647,send_message(start,_1154643))):-cd(message(_1154647,send_message(start,_1154643))),assert(do_action(message(_1154647,send_message(start,_1154643)),program)).
cd(message(_1154647,send_message(start,_1154643))):-true.
a(message(_1154647,send_message(comando_taglia_erba(_1154649),_1154643))):-cd(message(_1154647,send_message(comando_taglia_erba(_1154649),_1154643))),assert(do_action(message(_1154647,send_message(comando_taglia_erba(_1154649),_1154643)),program)).
cd(message(_1154647,send_message(comando_taglia_erba(_1154649),_1154643))):-true.
a(message(_1154647,propose(proposta_taglio_fast,[disponibile],_1154643))):-cd(message(_1154647,propose(proposta_taglio_fast,[disponibile],_1154643))),assert(do_action(message(_1154647,propose(proposta_taglio_fast,[disponibile],_1154643)),program)).
cd(message(_1154647,propose(proposta_taglio_fast,[disponibile],_1154643))):-true.
a(message(_1155035,send_message(sent_rmi(_1154691,_1155049,_1155051),_1154679))):-cd(message(_1155035,send_message(sent_rmi(_1154691,_1155049,_1155051),_1154679))),assert(do_action(message(_1155035,send_message(sent_rmi(_1154691,_1155049,_1155051),_1154679)),program)).
cd(message(_1155035,send_message(sent_rmi(_1154691,_1155049,_1155051),_1154679))):-true.
eve_cond(comando_taglia_erba_fast):-cd(comando_taglia_erba_fast),eve(comando_taglia_erba_fast).
cd(comando_taglia_erba_fast):-true.
eve_cond(off):-cd(off),eve(off).
cd(off):-true.
eve_cond(on):-cd(on),eve(on).
cd(on):-true.
eve_cond(proponi_se_disponibilii_taglio_fast):-cd(proponi_se_disponibilii_taglio_fast),eve(proponi_se_disponibilii_taglio_fast).
cd(proponi_se_disponibilii_taglio_fast):-true.
eve_cond(timer_taglio_giornaliero):-cd(timer_taglio_giornaliero),eve(timer_taglio_giornaliero).
cd(timer_taglio_giornaliero):-true.
eve_cond(busy(_1184001)):-cd(busy(_1184001)),eve(busy(_1184001)).
cd(busy(_1184001)):-true.
eve_cond(ready(_1184001)):-cd(ready(_1184001)),eve(ready(_1184001)).
cd(ready(_1184001)):-true.
eve_cond(fault(_1184001,_1184019)):-cd(fault(_1184001,_1184019)),eve(fault(_1184001,_1184019)).
cd(fault(_1184001,_1184019)):-true.