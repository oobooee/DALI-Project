 :-dynamic asserisci_ontologia/3. :-dynamic contatore_ritorno/1. eve(start):-a(ready). evi(ready):-a(message(centralina,send_message(ready(Me),Me))). eve(pioggia):-evp(sospendi_attivita(pioggia)),write('pioggia ...sto gia tornando alla base'),nl,!. eve(pioggia):-write('evento pioggia rilevato'),a(sospendi_attivita(pioggia)). eve(sole):- \+evp(avvia_taglio(_)),\+evp(sospendi_attivita(_)),write(' Sole splende'),nl. eve(sole):-write('sole rilevato'),a(drop_past(sospendi_attivita(_))),evp(avvia_taglio(Piano)),write(Piano),a(avvia_taglio(Piano)),a(drop_past(avvia_taglio(Piano))). eve(presenza_umana(Zona)):- \+evp(avvia_taglio(_)),write('-------> Presnza umana, taglio non in corso.'),nl. eve(presenza_umana(Zona)):-evp(sospendi_attivita(_)),write('-------> Presnza umana, sospensione gia in corso '),nl. eve(presenza_umana(Zona)):-write('evento pioggia rilevato'),a(sospendi_attivita(presenza_umana)),a(spegni_lame),write('--- BLOCCO LAME ----'). eve(area_libera):- \+evp(avvia_taglio(_)),\+evp(sospendi_attivita(_)),write(' Area libera'),nl. eve(area_libera):-write('area libera da 5 minuti'),a(drop_past(spegni_lame)),a(drop_past(sospendi_attivita(_))),evp(avvia_taglio(Piano)),write(Piano),a(avvia_taglio(Piano)),a(drop_past(avvia_taglio(Piano))). eve(comando_taglia_erba(Piano)):-evp(sospendi_attivita(Causa)),write('ignoro comando taglia erba'),nl,!. eve(comando_taglia_erba(Piano)):-evp(busy),write('busy....'),nl,!. eve(comando_taglia_erba(Piano)):-write('ricevuto comando taglia erba'),nl,a(avvia_taglio(Piano)). cd(avvia_taglio(Piano)):-controlli_preliminari,!. cd(avvia_taglio(Piano)):-write('Controlli falliti, invio fault a centralina'),nl,invia_fault(Piano),false. invia_fault(Piano):-write('Fault nel piano: '),write(Piano),nl,a(message(centralina,send_message(fault(Me,Piano),Me))). evi(avvia_taglio(Piano)):-write('Inizio taglio per il piano: '),write(Piano),nl,a(busy),nl,write('_________________'),nl,write('TAGLIO IN CORSO.....'),nl,write('_________________'),nl. cd(sospendi_attivita(Causa)):-evp(avvia_taglio(Piano)),write('sospensione coerente...'),nl. evi(sospendi_attivita(Causa)):-write('Il piano'),write(Piano),write(' si interrompe causa'),write(Causa),nl,a(alla_base),nl. evi(alla_base):-nl,a(drop_past(busy)),a(drop_past(ritorna_alla_base)),a(drop_past(alla_base)),a(ritorna_alla_base). eve(tagliocompletato):- \+evp(avvia_taglio(Piano)),write('Taglio non in corso'),!. eve(tagliocompletato):-evp(avvia_taglio(Piano)),a(tagliocomp(Piano)). evi(tagliocomp(Piano)):-write('taglio completato'),a(drop_past(busy)),a(drop_past(avvia_taglio(Piano))),a(drop_past(tagliocomp(Piano))),nl,nl,sleep(1),write('Alla base: PRONTO'),nl,retractall(busy),evi(ready). asserisci_ontologia(Ag,Condizioni,Proposta):-write('Proposta ricevuta da '),write(Ag),nl,write('condizioni: '),nl,write(' per azione: '),write(Proposta),Proposta,nl,write('--------------'),nl. proposta_taglio_fast:- \+evp(busy),write('taglio fast proposto...'),a(message(Ag,accept_proposal(Proposta,Condizioni,Me))),!. proposta_taglio_fast:-a(message(Ag,reject_proposal(Proposta,Condizioni,Me))),nl,write('prop rifiutata'),nl. simula_fault(Tipo,Soglia):-random(1,100,Esito),write(Esito),write('___'),(Esito<Soglia->write(Tipo),write(' ok'),nl,true;write('GUASTO a '),write(Tipo),nl,false). controlli_preliminari:-write('controlli in corso'),nl,simula_fault(batteria,99),simula_fault(alimentazione,99),simula_fault(lame,99),nl. evi(ritorna_alla_base):-nl,write('-------------'),write('Inizio ritorno alla base...'),nl,random(2,6,Temporitorno),write(Temporitorno),assert(contatore_ritorno(ritorno_alla_base,Temporitorno)),ciclo_ritorno(ritorno_alla_base),write('Rasaerba tornato alla base!'),nl. ciclo_ritorno(Ops):-contatore_ritorno(Ops,T),T>0,write('Ciclo'),write(Ops),write(' in corso.. tempo residuo stimato : '),write(T),write(' secondi'),nl,retract(contatore_ritorno(Ops,T)),T1 is T-1,assert(contatore_ritorno(Ops,T1)),sleep(1),ciclo_ritorno(Ops). ciclo_ritorno(Ops):-contatore_ritorno(Ops,0),write('Ciclo '),write(Ops),write(' completata.'),nl,retract(contatore_ritorno(Ops,0)). :-dynamic receive/1. :-dynamic send/2. :-dynamic isa/3. receive(send_message(X,Ag)):-told(Ag,send_message(X)),call_send_message(X,Ag). receive(propose(A,C,Ag)):-told(Ag,propose(A,C)),call_propose(A,C,Ag). receive(cfp(A,C,Ag)):-told(Ag,cfp(A,C)),call_cfp(A,C,Ag). receive(accept_proposal(A,Mp,Ag)):-told(Ag,accept_proposal(A,Mp),T),call_accept_proposal(A,Mp,Ag,T). receive(reject_proposal(A,Mp,Ag)):-told(Ag,reject_proposal(A,Mp),T),call_reject_proposal(A,Mp,Ag,T). receive(failure(A,M,Ag)):-told(Ag,failure(A,M),T),call_failure(A,M,Ag,T). receive(cancel(A,Ag)):-told(Ag,cancel(A)),call_cancel(A,Ag). receive(execute_proc(X,Ag)):-told(Ag,execute_proc(X)),call_execute_proc(X,Ag). receive(query_ref(X,N,Ag)):-told(Ag,query_ref(X,N)),call_query_ref(X,N,Ag). receive(inform(X,M,Ag)):-told(Ag,inform(X,M),T),call_inform(X,Ag,M,T). receive(inform(X,Ag)):-told(Ag,inform(X),T),call_inform(X,Ag,T). receive(refuse(X,Ag)):-told(Ag,refuse(X),T),call_refuse(X,Ag,T). receive(agree(X,Ag)):-told(Ag,agree(X)),call_agree(X,Ag). receive(confirm(X,Ag)):-told(Ag,confirm(X),T),call_confirm(X,Ag,T). receive(disconfirm(X,Ag)):-told(Ag,disconfirm(X)),call_disconfirm(X,Ag). receive(reply(X,Ag)):-told(Ag,reply(X)). send(To,query_ref(X,N,Ag)):-tell(To,Ag,query_ref(X,N)),send_m(To,query_ref(X,N,Ag)). send(To,send_message(X,Ag)):-tell(To,Ag,send_message(X)),send_m(To,send_message(X,Ag)). send(To,reject_proposal(X,L,Ag)):-tell(To,Ag,reject_proposal(X,L)),send_m(To,reject_proposal(X,L,Ag)). send(To,accept_proposal(X,L,Ag)):-tell(To,Ag,accept_proposal(X,L)),send_m(To,accept_proposal(X,L,Ag)). send(To,confirm(X,Ag)):-tell(To,Ag,confirm(X)),send_m(To,confirm(X,Ag)). send(To,propose(X,C,Ag)):-tell(To,Ag,propose(X,C)),send_m(To,propose(X,C,Ag)). send(To,disconfirm(X,Ag)):-tell(To,Ag,disconfirm(X)),send_m(To,disconfirm(X,Ag)). send(To,inform(X,M,Ag)):-tell(To,Ag,inform(X,M)),send_m(To,inform(X,M,Ag)). send(To,inform(X,Ag)):-tell(To,Ag,inform(X)),send_m(To,inform(X,Ag)). send(To,refuse(X,Ag)):-tell(To,Ag,refuse(X)),send_m(To,refuse(X,Ag)). send(To,failure(X,M,Ag)):-tell(To,Ag,failure(X,M)),send_m(To,failure(X,M,Ag)). send(To,execute_proc(X,Ag)):-tell(To,Ag,execute_proc(X)),send_m(To,execute_proc(X,Ag)). send(To,agree(X,Ag)):-tell(To,Ag,agree(X)),send_m(To,agree(X,Ag)). call_send_message(X,Ag):-send_message(X,Ag). call_execute_proc(X,Ag):-execute_proc(X,Ag). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),meta_ref(X,N,L,Ag),a(message(Ag,inform(query_ref(X,N),values(L),A))). call_query_ref(X,_,Ag):-clause(agent(A),_),var(X),a(message(Ag,refuse(query_ref(variable),motivation(refused_variables),A))). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),not(meta_ref(X,N,_,_)),a(message(Ag,inform(query_ref(X,N),motivation(no_values),A))). call_agree(X,Ag):-clause(agent(A),_),ground(X),meta_agree(X,Ag),a(message(Ag,inform(agree(X),values(yes),A))). call_confirm(X,Ag,T):-ground(X),statistics(walltime,[Tp,_]),asse_cosa(past_event(X,T)),retractall(past(X,Tp,Ag)),assert(past(X,Tp,Ag)). call_disconfirm(X,Ag):-ground(X),retractall(past(X,_,Ag)),retractall(past_event(X,_)). call_agree(X,Ag):-clause(agent(A),_),ground(X),not(meta_agree(X,_)),a(message(Ag,inform(agree(X),values(no),A))). call_agree(X,Ag):-clause(agent(A),_),not(ground(X)),a(message(Ag,refuse(agree(variable),motivation(refused_variables),A))). call_inform(X,Ag,M,T):-asse_cosa(past_event(inform(X,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,M,Ag),_,Ag)),assert(past(inform(X,M,Ag),Tp,Ag)). call_inform(X,Ag,T):-asse_cosa(past_event(inform(X,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,Ag),_,Ag)),assert(past(inform(X,Ag),Tp,Ag)). call_refuse(X,Ag,T):-clause(agent(A),_),asse_cosa(past_event(X,T)),statistics(walltime,[Tp,_]),retractall(past(X,_,Ag)),assert(past(X,Tp,Ag)),a(message(Ag,reply(received(X),A))). call_cfp(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_433433,Ontology,_433437),_433427),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_cfp(A,C,Ag,_433471)),a(message(Ag,propose(A,[_433471],AgI))),retractall(ext_agent(Ag,_433509,Ontology,_433513)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_433307,Ontology,_433311),_433301),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_propose(A,C,Ag)),a(message(Ag,accept_proposal(A,[],AgI))),retractall(ext_agent(Ag,_433377,Ontology,_433381)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_433195,Ontology,_433199),_433189),not(call_meta_execute_propose(A,C,Ag)),a(message(Ag,reject_proposal(A,[],AgI))),retractall(ext_agent(Ag,_433251,Ontology,_433255)). call_accept_proposal(A,Mp,Ag,T):-asse_cosa(past_event(accepted_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(accepted_proposal(A,Mp,Ag),_,Ag)),assert(past(accepted_proposal(A,Mp,Ag),Tp,Ag)). call_reject_proposal(A,Mp,Ag,T):-asse_cosa(past_event(rejected_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(rejected_proposal(A,Mp,Ag),_,Ag)),assert(past(rejected_proposal(A,Mp,Ag),Tp,Ag)). call_failure(A,M,Ag,T):-asse_cosa(past_event(failed_action(A,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(failed_action(A,M,Ag),_,Ag)),assert(past(failed_action(A,M,Ag),Tp,Ag)). call_cancel(A,Ag):-if(clause(high_action(A,Te,Ag),_432759),retractall(high_action(A,Te,Ag)),true),if(clause(normal_action(A,Te,Ag),_432793),retractall(normal_action(A,Te,Ag)),true). external_refused_action_propose(A,Ag):-clause(not_executable_action_propose(A,Ag),_). evi(external_refused_action_propose(A,Ag)):-clause(agent(Ai),_),a(message(Ag,failure(A,motivation(false_conditions),Ai))),retractall(not_executable_action_propose(A,Ag)). refused_message(AgM,Con):-clause(eliminated_message(AgM,_,_,Con,_),_). refused_message(To,M):-clause(eliminated_message(M,To,motivation(conditions_not_verified)),_432575). evi(refused_message(AgM,Con)):-clause(agent(Ai),_),a(message(AgM,inform(Con,motivation(refused_message),Ai))),retractall(eliminated_message(AgM,_,_,Con,_)),retractall(eliminated_message(Con,AgM,motivation(conditions_not_verified))). send_jasper_return_message(X,S,T,S0):-clause(agent(Ag),_432423),a(message(S,send_message(sent_rmi(X,T,S0),Ag))). gest_learn(H):-clause(past(learn(H),T,U),_432371),learn_if(H,T,U). evi(gest_learn(H)):-retractall(past(learn(H),_432247,_432249)),clause(agente(_432269,_432271,_432273,S),_432265),name(S,N),append(L,[46,112,108],N),name(F,L),manage_lg(H,F),a(learned(H)). cllearn:-clause(agente(_432041,_432043,_432045,S),_432037),name(S,N),append(L,[46,112,108],N),append(L,[46,116,120,116],To),name(FI,To),open(FI,read,_432141,[]),repeat,read(_432141,T),arg(1,T,H),write(H),nl,T==end_of_file,!,close(_432141). send_msg_learn(T,A,Ag):-a(message(Ag,confirm(learn(T),A))). told(From,send_message(M)):-true. told(Ag,execute_proc(_)):-true. told(Ag,query_ref(_,_)):-true. told(Ag,agree(_)):-true. told(Ag,confirm(_),200):-true. told(Ag,disconfirm(_)):-true. told(Ag,request(_,_)):-true. told(Ag,propose(_,_)):-true. told(Ag,accept_proposal(_,_),20):-true. told(Ag,reject_proposal(_,_),20):-true. told(_,failure(_,_),200):-true. told(_,cancel(_)):-true. told(Ag,inform(_,_),70):-true. told(Ag,inform(_),70):-true. told(Ag,reply(_)):-true. told(_,refuse(_,Xp)):-functor(Xp,Fp,_),Fp=agree. tell(To,From,send_message(M)):-true. tell(To,_,confirm(_)):-true. tell(To,_,disconfirm(_)):-true. tell(To,_,propose(_,_)):-true. tell(To,_,request(_,_)):-true. tell(To,_,execute_proc(_)):-true. tell(To,_,agree(_)):-true. tell(To,_,reject_proposal(_,_)):-true. tell(To,_,accept_proposal(_,_)):-true. tell(To,_,failure(_,_)):-true. tell(To,_,query_ref(_,_)):-true. tell(To,_,eve(_)):-true. tell(_,_,refuse(X,_)):-functor(X,F,_),(F=send_message;F=query_ref). tell(To,_,inform(_,M)):-true;M=motivation(refused_message). tell(To,_,inform(_)):-true,To\=user. tell(To,_,propose_desire(_,_)):-true. meta(P,V,AgM):-functor(P,F,N),N=0,clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,V,Pre,[Rep,Host]);same_as(F,V,Pre,[Rep,Host]);eq_class(F,V,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,V,PreM,[RepM,HostM]);same_as(F,V,PreM,[RepM,HostM]);eq_class(F,V,PreM,[RepM,HostM])),true,false),false)). meta(P,V,AgM):-functor(P,F,N),(N=1;N=2),clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,_):-functor(P,F,N),N=2,symmetric(F),P=..L,delete(L,F,R),reverse(R,R1),append([F],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),functor(P,F,N),N=2,(symmetric(F,AgM);symmetric(F)),P=..L,delete(L,F,R),reverse(R,R1),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,Y,Pre,[Rep,Host]);same_as(F,Y,Pre,[Rep,Host]);eq_class(F,Y,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,Y,PreM,[RepM,HostM]);same_as(F,Y,PreM,[RepM,HostM]);eq_class(F,Y,PreM,[RepM,HostM])),true,false),false)),append([Y],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N>2,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N=2,P=..L,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),substitute(F,L,H,Lf),V=..Lf.
a(alla_base):-cd(alla_base),assert(do_action(alla_base,program)).
cd(alla_base):-true.
a(busy):-cd(busy),assert(do_action(busy,program)).
cd(busy):-true.
a(ready):-cd(ready),assert(do_action(ready,program)).
cd(ready):-true.
a(ritorna_alla_base):-cd(ritorna_alla_base),assert(do_action(ritorna_alla_base,program)).
cd(ritorna_alla_base):-true.
a(spegni_lame):-cd(spegni_lame),assert(do_action(spegni_lame,program)).
cd(spegni_lame):-true.
a(avvia_taglio(_1107187)):-cd(avvia_taglio(_1107187)),assert(do_action(avvia_taglio(_1107187),program)).
a(drop_past(alla_base)):-cd(drop_past(alla_base)),assert(do_action(drop_past(alla_base),program)).
cd(drop_past(alla_base)):-true.
a(drop_past(busy)):-cd(drop_past(busy)),assert(do_action(drop_past(busy),program)).
cd(drop_past(busy)):-true.
a(drop_past(ritorna_alla_base)):-cd(drop_past(ritorna_alla_base)),assert(do_action(drop_past(ritorna_alla_base),program)).
cd(drop_past(ritorna_alla_base)):-true.
a(drop_past(spegni_lame)):-cd(drop_past(spegni_lame)),assert(do_action(drop_past(spegni_lame),program)).
cd(drop_past(spegni_lame)):-true.
a(drop_past(avvia_taglio(_1107187))):-cd(drop_past(avvia_taglio(_1107187))),assert(do_action(drop_past(avvia_taglio(_1107187)),program)).
cd(drop_past(avvia_taglio(_1107187))):-true.
a(drop_past(sospendi_attivita(_1107243))):-cd(drop_past(sospendi_attivita(_1107243))),assert(do_action(drop_past(sospendi_attivita(_1107243)),program)).
cd(drop_past(sospendi_attivita(_1107243))):-true.
a(drop_past(tagliocomp(_1107187))):-cd(drop_past(tagliocomp(_1107187))),assert(do_action(drop_past(tagliocomp(_1107187)),program)).
cd(drop_past(tagliocomp(_1107187))):-true.
a(learned(_1107263)):-cd(learned(_1107263)),assert(do_action(learned(_1107263),program)).
cd(learned(_1107263)):-true.
a(sospendi_attivita(pioggia)):-cd(sospendi_attivita(pioggia)),assert(do_action(sospendi_attivita(pioggia),program)).
a(sospendi_attivita(presenza_umana)):-cd(sospendi_attivita(presenza_umana)),assert(do_action(sospendi_attivita(presenza_umana),program)).
a(tagliocomp(_1107187)):-cd(tagliocomp(_1107187)),assert(do_action(tagliocomp(_1107187),program)).
cd(tagliocomp(_1107187)):-true.
a(message(_1107295,confirm(learn(_1107307),_1107303))):-cd(message(_1107295,confirm(learn(_1107307),_1107303))),assert(do_action(message(_1107295,confirm(learn(_1107307),_1107303)),program)).
cd(message(_1107295,confirm(learn(_1107307),_1107303))):-true.
a(message(centralina,send_message(ready(_1107327),_1107327))):-cd(message(centralina,send_message(ready(_1107327),_1107327))),assert(do_action(message(centralina,send_message(ready(_1107327),_1107327)),program)).
cd(message(centralina,send_message(ready(_1107327),_1107327))):-true.
a(message(centralina,send_message(fault(_1107327,_1107187),_1107327))):-cd(message(centralina,send_message(fault(_1107327,_1107187),_1107327))),assert(do_action(message(centralina,send_message(fault(_1107327,_1107187),_1107327)),program)).
cd(message(centralina,send_message(fault(_1107327,_1107187),_1107327))):-true.
a(message(_1107357,reply(received(_1107369),_1107365))):-cd(message(_1107357,reply(received(_1107369),_1107365))),assert(do_action(message(_1107357,reply(received(_1107369),_1107365)),program)).
cd(message(_1107357,reply(received(_1107369),_1107365))):-true.
a(message(_1107357,accept_proposal(_1107365,[],_1107387))):-cd(message(_1107357,accept_proposal(_1107365,[],_1107387))),assert(do_action(message(_1107357,accept_proposal(_1107365,[],_1107387)),program)).
cd(message(_1107357,accept_proposal(_1107365,[],_1107387))):-true.
a(message(_1107357,accept_proposal(_1107401,_1107403,_1107327))):-cd(message(_1107357,accept_proposal(_1107401,_1107403,_1107327))),assert(do_action(message(_1107357,accept_proposal(_1107401,_1107403,_1107327)),program)).
cd(message(_1107357,accept_proposal(_1107401,_1107403,_1107327))):-true.
a(message(_1107357,failure(_1107365,motivation(false_conditions),_1107423))):-cd(message(_1107357,failure(_1107365,motivation(false_conditions),_1107423))),assert(do_action(message(_1107357,failure(_1107365,motivation(false_conditions),_1107423)),program)).
cd(message(_1107357,failure(_1107365,motivation(false_conditions),_1107423))):-true.
a(message(_1107357,inform(agree(_1107369),values(no),_1107365))):-cd(message(_1107357,inform(agree(_1107369),values(no),_1107365))),assert(do_action(message(_1107357,inform(agree(_1107369),values(no),_1107365)),program)).
cd(message(_1107357,inform(agree(_1107369),values(no),_1107365))):-true.
a(message(_1107357,inform(agree(_1107369),values(yes),_1107365))):-cd(message(_1107357,inform(agree(_1107369),values(yes),_1107365))),assert(do_action(message(_1107357,inform(agree(_1107369),values(yes),_1107365)),program)).
cd(message(_1107357,inform(agree(_1107369),values(yes),_1107365))):-true.
a(message(_1107357,inform(query_ref(_1107369,_1107503),motivation(no_values),_1107365))):-cd(message(_1107357,inform(query_ref(_1107369,_1107503),motivation(no_values),_1107365))),assert(do_action(message(_1107357,inform(query_ref(_1107369,_1107503),motivation(no_values),_1107365)),program)).
cd(message(_1107357,inform(query_ref(_1107369,_1107503),motivation(no_values),_1107365))):-true.
a(message(_1107357,inform(query_ref(_1107369,_1107503),values(_1107535),_1107365))):-cd(message(_1107357,inform(query_ref(_1107369,_1107503),values(_1107535),_1107365))),assert(do_action(message(_1107357,inform(query_ref(_1107369,_1107503),values(_1107535),_1107365)),program)).
cd(message(_1107357,inform(query_ref(_1107369,_1107503),values(_1107535),_1107365))):-true.
a(message(_1107357,propose(_1107365,[_1107555],_1107387))):-cd(message(_1107357,propose(_1107365,[_1107555],_1107387))),assert(do_action(message(_1107357,propose(_1107365,[_1107555],_1107387)),program)).
cd(message(_1107357,propose(_1107365,[_1107555],_1107387))):-true.
a(message(_1107357,refuse(agree(variable),motivation(refused_variables),_1107365))):-cd(message(_1107357,refuse(agree(variable),motivation(refused_variables),_1107365))),assert(do_action(message(_1107357,refuse(agree(variable),motivation(refused_variables),_1107365)),program)).
cd(message(_1107357,refuse(agree(variable),motivation(refused_variables),_1107365))):-true.
a(message(_1107357,refuse(query_ref(variable),motivation(refused_variables),_1107365))):-cd(message(_1107357,refuse(query_ref(variable),motivation(refused_variables),_1107365))),assert(do_action(message(_1107357,refuse(query_ref(variable),motivation(refused_variables),_1107365)),program)).
cd(message(_1107357,refuse(query_ref(variable),motivation(refused_variables),_1107365))):-true.
a(message(_1107357,reject_proposal(_1107365,[],_1107387))):-cd(message(_1107357,reject_proposal(_1107365,[],_1107387))),assert(do_action(message(_1107357,reject_proposal(_1107365,[],_1107387)),program)).
cd(message(_1107357,reject_proposal(_1107365,[],_1107387))):-true.
a(message(_1107357,reject_proposal(_1107401,_1107403,_1107327))):-cd(message(_1107357,reject_proposal(_1107401,_1107403,_1107327))),assert(do_action(message(_1107357,reject_proposal(_1107401,_1107403,_1107327)),program)).
cd(message(_1107357,reject_proposal(_1107401,_1107403,_1107327))):-true.
a(message(_1107653,inform(_1107659,motivation(refused_message),_1107423))):-cd(message(_1107653,inform(_1107659,motivation(refused_message),_1107423))),assert(do_action(message(_1107653,inform(_1107659,motivation(refused_message),_1107423)),program)).
cd(message(_1107653,inform(_1107659,motivation(refused_message),_1107423))):-true.
a(message(_1107675,send_message(sent_rmi(_1107369,_1107689,_1107691),_1107357))):-cd(message(_1107675,send_message(sent_rmi(_1107369,_1107689,_1107691),_1107357))),assert(do_action(message(_1107675,send_message(sent_rmi(_1107369,_1107689,_1107691),_1107357)),program)).
cd(message(_1107675,send_message(sent_rmi(_1107369,_1107689,_1107691),_1107357))):-true.
eve_cond(area_libera):-cd(area_libera),eve(area_libera).
cd(area_libera):-true.
eve_cond(pioggia):-cd(pioggia),eve(pioggia).
cd(pioggia):-true.
eve_cond(sole):-cd(sole),eve(sole).
cd(sole):-true.
eve_cond(start):-cd(start),eve(start).
cd(start):-true.
eve_cond(tagliocompletato):-cd(tagliocompletato),eve(tagliocompletato).
cd(tagliocompletato):-true.
eve_cond(comando_taglia_erba(_1139019)):-cd(comando_taglia_erba(_1139019)),eve(comando_taglia_erba(_1139019)).
cd(comando_taglia_erba(_1139019)):-true.
eve_cond(presenza_umana(_1139027)):-cd(presenza_umana(_1139027)),eve(presenza_umana(_1139027)).
cd(presenza_umana(_1139027)):-true.